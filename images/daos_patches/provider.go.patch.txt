diff --git a/src/control/lib/hardware/sysfs/provider.go b/src/control/lib/hardware/sysfs/provider.go
index 8b4eaaa9e..b8ee16d42 100644
--- a/src/control/lib/hardware/sysfs/provider.go
+++ b/src/control/lib/hardware/sysfs/provider.go
@@ -138,7 +138,20 @@ func (s *Provider) addPCIDevices(topo *hardware.Topology, subsystem string) erro

 		pciAddr, err := s.getPCIAddress(path)
 		if err != nil {
-			s.log.Debug(err.Error())
+			// FIXME DAOS-10749 manage eth0 virtual device from AZURE cloud VMs
+			s.log.Noticef("DAOS-10749: SPY 001 path=%q", path)
+			if path != "/sys/class/net/eth0" {
+				return nil
+			}
+
+			err = nil
+			virt := &hardware.VirtualDevice{
+				Name:          "eth0",
+				Type:          hardware.DeviceTypeNetInterface,
+				BackingDevice: nil,
+			}
+			s.log.Noticef("DAOS-10749: SPY 002 Workaround to manage AZURE Cloud network interface eth0: Adding it as virtual device")
+			topo.VirtualDevices = []*hardware.VirtualDevice{virt}
 			return nil
 		}
 		dev.PCIAddr = *pciAddr
@@ -245,7 +258,12 @@ func (s *Provider) addVirtualNetDevices(topo *hardware.Topology) error {
 	}

 	if len(virtualDevices) > 0 {
-		topo.VirtualDevices = virtualDevices
+		// FIXME DAOS-10749  Hack to manage eth0 virtual device from AZURE cloud VMs
+		if len(topo.VirtualDevices) == 0 {
+			s.log.Noticef("DAOS-10749: SPY 003 Workaround to manage AZURE Cloud network interface eth0: Adding it as virtual device")
+			topo.VirtualDevices = make([]*hardware.VirtualDevice, 0)
+		}
+		topo.VirtualDevices = append(topo.VirtualDevices, virtualDevices...)
 	}

 	return nil
