{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "resourcePrefix": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "String that will prefix all resource names"
      }
    },
    "existingVnetResourceGroupName": {
      "type": "String",
      "metadata": {
        "description": "Name of the resource group for the existing virtual network to deploy the scale set into"
      }
    },
    "existingVnetName": {
      "type": "String",
      "metadata": {
        "description": "Name of the existing virtual network to deploy the scale set into"
      }
    },
    "existingSubnetName": {
      "type": "String",
      "metadata": {
        "description": "Name of the existing subnet to deploy the scale set into"
      }
    },
    "daosServerImageId": {
      "type": "String",
      "metadata": {
        "description": "The ID of the disk image for the DAOS server VM"
      }
    },
    "daosServerSku": {
      "defaultValue": "Standard_L8s_v3",
      "type": "String",
      "metadata": {
        "description": "The SKU for the DAOS server"
      }
    },
    "vmScalesetName": {
      "type": "String",
      "metadata": {
        "description": "The name of the DAOS server VM Scale Set"
      }
    },
    "adminUser": {
      "type": "String",
      "defaultValue": "daos_admin",
      "metadata": {
        "description": "The admin username for all DAOS instances."
      }
    },
    "adminRsaPublicKey": {
      "type": "String",
      "metadata": {
        "description": "The RSA public key to access the instances."
      }
    },
    "serverCount": {
      "type": "Int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of DAOS servers to deploy"
      }
    },
    "serverDiskCount": {
      "type": "Int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of disks on the daos servers"
      }
    },
    "serverDiskSize": {
      "defaultValue": 1024,
      "type": "Int",
      "metadata": {
        "description": "The size of the DAOS server disks"
      }
    },
    "serverStorageSku": {
      "defaultValue": "Premium_LRS",
      "type": "String",
      "metadata": {
        "description": "The SKU for the DAOS server disks"
      }
    },
    "serverCacheOption": {
      "defaultValue": "None",
      "type": "String",
      "metadata": {
        "description": "The caching option for the DAOS server disks"
      }
    },
    "useAvailabilityZone": {
      "defaultValue": true,
      "type": "Bool",
      "metadata": {
        "description": "Use an availability zone for the DAOS admin and server VMs"
      }
    },
    "availabilityZone": {
      "defaultValue": 1,
      "type": "Int",
      "minValue": 1,
      "maxValue": 3,
      "metadata": {
        "description": "The availability zone to use for the DAOS admin and server VMs"
      }
    },
    "userAssignedManagedIdentityName": {
      "defaultValue": "None",
      "type": "String",
      "metadata": {
        "description": "The name of a User Assigne Managed Identity to assign to the VMSS"
      }
    }
  },
  "functions": [],
  "variables": {
    "baseName": "[if(or(equals(parameters('resourcePrefix'), json('null')), equals(length(parameters('resourcePrefix')), 0)), 'daos', format('{0}-daos', parameters('resourcePrefix')))]",
    "serverVmBaseName": "[format('{0}-server', variables('baseName'))]",
    "subnet": "[resourceId(parameters('existingVnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubNetName'))]",
    "serverImageReference": {
      "id": "[parameters('daosServerImageId')]"
    },
    "ciScriptServer": "",
    "copy": [
      {
        "name": "serverDataDisks",
        "count": "[parameters('serverDiskCount')]",
        "input": {
          "caching": "[parameters('serverCacheOption')]",
          "managedDisk": {
            "storageAccountType": "[parameters('serverStorageSku')]"
          },
          "createOption": "Empty",
          "lun": "[copyIndex('serverDataDisks')]",
          "diskSizeGB": "[parameters('serverDiskSize')]"
        }
      }
    ],
    "imagePlan": {
      "name": "8-gen2",
      "publisher": "almalinux",
      "product": "almalinux"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2022-11-01",
      "name": "[parameters('vmScalesetName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedManagedIdentityName'))]": {}
        }
      },
      "plan": "[variables('imagePlan')]",
      "zones": "[if(parameters('useAvailabilityZone'), array(format('{0}', parameters('availabilityZone'))), null())]",
      "tags": {
        "filesystem": "daos"
      },
      "sku": {
        "name": "[parameters('daosServerSku')]",
        "tier": "Standard",
        "capacity": "[parameters('serverCount')]"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": "[variables('serverImageReference')]",
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadWrite"
            },
            "dataDisks": "[variables('serverDataDisks')]"
          },
          "osProfile": {
            "computerNamePrefix": "[concat(variables('serverVmBaseName'), '-')]",
            "adminUsername": "[parameters('adminUser')]",
            "customData": "[base64(variables('ciScriptServer'))]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUser'))]",
                    "keyData": "[parameters('adminRsaPublicKey')]"
                  }
                ]
              }
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[format('{0}-nic', variables('serverVmBaseName'))]",
                "properties": {
                  "primary": true,
                  "enableAcceleratedNetworking": true,
                  "ipConfigurations": [
                    {
                      "name": "ipConfig-vmss",
                      "properties": {
                        "subnet": {
                          "id": "[variables('subnet')]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "resourceIds": {
      "type": "array",
      "value": [
        "[resourceId(resourceGroup().name, 'Microsoft.Compute/virtualMachineScaleSets', parameters('vmScalesetName'))]"
      ]
    }
  }
}
